// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Videoteka.WebAPI.Database;

namespace Videoteka.WebAPI.Migrations
{
    [DbContext(typeof(VideotekaContext))]
    partial class VideotekaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Videoteka.WebAPI.Database.Drzava", b =>
                {
                    b.Property<int>("DrzavaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DrzavaID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("DrzavaId");

                    b.ToTable("Drzava");
                });

            modelBuilder.Entity("Videoteka.WebAPI.Database.Film", b =>
                {
                    b.Property<int>("FilmId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("FilmID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("CijenaIznajmljivanja");

                    b.Property<bool>("Dostupan");

                    b.Property<int>("DrzavaId")
                        .HasColumnName("DrzavaID");

                    b.Property<string>("Glumac")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("Godina");

                    b.Property<string>("Jezik")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<int>("ReziserId")
                        .HasColumnName("ReziserID");

                    b.Property<byte[]>("Slika");

                    b.Property<byte[]>("SlikaThumb");

                    b.Property<decimal>("Trajanje");

                    b.Property<int>("ZanrId")
                        .HasColumnName("ZanrID");

                    b.HasKey("FilmId");

                    b.HasIndex("DrzavaId");

                    b.HasIndex("ReziserId");

                    b.HasIndex("ZanrId");

                    b.ToTable("Film");
                });

            modelBuilder.Entity("Videoteka.WebAPI.Database.Grad", b =>
                {
                    b.Property<int>("GradId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("GradID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DrzavaId")
                        .HasColumnName("DrzavaID");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("PostanskiBroj")
                        .HasMaxLength(50);

                    b.HasKey("GradId");

                    b.ToTable("Grad");
                });

            modelBuilder.Entity("Videoteka.WebAPI.Database.Klijent", b =>
                {
                    b.Property<int>("KlijentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("KlijentID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresa")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<DateTime>("DatumRegistracije")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DatumRodjenja")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int>("GradId")
                        .HasColumnName("GradID");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("LozinkaHash")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("LozinkaSalt")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<byte[]>("Slika");

                    b.Property<byte[]>("SlikaThumb");

                    b.Property<bool>("Status");

                    b.Property<string>("Telefon")
                        .HasMaxLength(20);

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("KlijentId");

                    b.HasIndex("GradId");

                    b.ToTable("Klijent");
                });

            modelBuilder.Entity("Videoteka.WebAPI.Database.Korisnici", b =>
                {
                    b.Property<int>("KorisnikId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("KorisnikID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresa")
                        .HasMaxLength(100);

                    b.Property<DateTime>("DatumRegistracije");

                    b.Property<DateTime?>("DatumRodjenja");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int>("GradId")
                        .HasColumnName("GradID");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("LozinkaHash")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("LozinkaSalt")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<byte[]>("Slika");

                    b.Property<byte[]>("SlikaThumb");

                    b.Property<bool>("Status");

                    b.Property<string>("Telefon")
                        .HasMaxLength(20);

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("KorisnikId");

                    b.HasIndex("GradId");

                    b.ToTable("Korisnici");
                });

            modelBuilder.Entity("Videoteka.WebAPI.Database.KorisniciUloge", b =>
                {
                    b.Property<int>("KorisniciUlogeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("KorisniciUlogeID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumIzmjene")
                        .HasColumnType("datetime");

                    b.Property<int>("KorisnikId")
                        .HasColumnName("KorisnikID");

                    b.Property<int>("UlogaId")
                        .HasColumnName("UlogaID");

                    b.HasKey("KorisniciUlogeId");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("UlogaId");

                    b.ToTable("KorisniciUloge");
                });

            modelBuilder.Entity("Videoteka.WebAPI.Database.Ocjena", b =>
                {
                    b.Property<int>("OcjenaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("OcjenaID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumEvidentiranja")
                        .HasColumnType("datetime");

                    b.Property<string>("Napomena");

                    b.Property<int>("Ocjena1")
                        .HasColumnName("Ocjena");

                    b.Property<int>("RezervacijaFilmaId")
                        .HasColumnName("RezervacijaFilmaID");

                    b.HasKey("OcjenaId");

                    b.HasIndex("RezervacijaFilmaId");

                    b.ToTable("Ocjena");
                });

            modelBuilder.Entity("Videoteka.WebAPI.Database.Poruka", b =>
                {
                    b.Property<int>("PorukaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PorukaID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumVrijeme")
                        .HasColumnType("datetime");

                    b.Property<int>("KlijentId")
                        .HasColumnName("KlijentID");

                    b.Property<string>("Naslov")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Posiljaoc")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<bool>("Procitano");

                    b.Property<int>("RezervacijaFilmaId")
                        .HasColumnName("RezervacijaFilmaID");

                    b.Property<string>("Sadrzaj")
                        .IsRequired();

                    b.Property<int>("UposlenikId")
                        .HasColumnName("UposlenikID");

                    b.HasKey("PorukaId");

                    b.HasIndex("KlijentId");

                    b.HasIndex("RezervacijaFilmaId");

                    b.HasIndex("UposlenikId");

                    b.ToTable("Poruka");
                });

            modelBuilder.Entity("Videoteka.WebAPI.Database.Racun", b =>
                {
                    b.Property<int>("RacunId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RacunID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumIzdavanja")
                        .HasColumnType("datetime");

                    b.Property<decimal>("UkupanIznos");

                    b.HasKey("RacunId");

                    b.ToTable("Racun");
                });

            modelBuilder.Entity("Videoteka.WebAPI.Database.RezervacijaFilma", b =>
                {
                    b.Property<int>("RezervacijaFilmaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RezervacijaFilmaID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumKreiranja")
                        .HasColumnType("datetime");

                    b.Property<int>("FilmId")
                        .HasColumnName("FilmID");

                    b.Property<decimal>("Iznos");

                    b.Property<decimal?>("IznosSaPopustom");

                    b.Property<int>("KlijentId")
                        .HasColumnName("KlijentID");

                    b.Property<string>("Opis");

                    b.Property<bool?>("Otkazana");

                    b.Property<double>("Popust");

                    b.Property<int>("RacunId")
                        .HasColumnName("RacunID");

                    b.Property<DateTime>("RezervacijaDo")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("RezervacijaOd")
                        .HasColumnType("datetime");

                    b.HasKey("RezervacijaFilmaId");

                    b.HasIndex("FilmId");

                    b.HasIndex("KlijentId");

                    b.HasIndex("RacunId");

                    b.ToTable("RezervacijaFilma");
                });

            modelBuilder.Entity("Videoteka.WebAPI.Database.Reziser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumRodjenja");

                    b.Property<string>("Ime");

                    b.Property<string>("Prezime");

                    b.HasKey("Id");

                    b.ToTable("Reziser");
                });

            modelBuilder.Entity("Videoteka.WebAPI.Database.Uloge", b =>
                {
                    b.Property<int>("UlogaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UlogaID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Opis");

                    b.HasKey("UlogaId");

                    b.ToTable("Uloge");
                });

            modelBuilder.Entity("Videoteka.WebAPI.Database.Zanr", b =>
                {
                    b.Property<int>("ZanrId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ZanrID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("ZanrId");

                    b.ToTable("Zanr");
                });

            modelBuilder.Entity("Videoteka.WebAPI.Database.Film", b =>
                {
                    b.HasOne("Videoteka.WebAPI.Database.Drzava", "Drzava")
                        .WithMany("Film")
                        .HasForeignKey("DrzavaId")
                        .HasConstraintName("FK_Film_DrzavaID");

                    b.HasOne("Videoteka.WebAPI.Database.Reziser", "Reziser")
                        .WithMany()
                        .HasForeignKey("ReziserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Videoteka.WebAPI.Database.Zanr", "Zanr")
                        .WithMany("Film")
                        .HasForeignKey("ZanrId")
                        .HasConstraintName("FK_Film_ZanrID");
                });

            modelBuilder.Entity("Videoteka.WebAPI.Database.Klijent", b =>
                {
                    b.HasOne("Videoteka.WebAPI.Database.Grad", "Grad")
                        .WithMany("Klijent")
                        .HasForeignKey("GradId")
                        .HasConstraintName("FK_Klijent_GradID");
                });

            modelBuilder.Entity("Videoteka.WebAPI.Database.Korisnici", b =>
                {
                    b.HasOne("Videoteka.WebAPI.Database.Grad", "Grad")
                        .WithMany("Korisnici")
                        .HasForeignKey("GradId")
                        .HasConstraintName("FK_Korisnik_GradID");
                });

            modelBuilder.Entity("Videoteka.WebAPI.Database.KorisniciUloge", b =>
                {
                    b.HasOne("Videoteka.WebAPI.Database.Korisnici", "Korisnik")
                        .WithMany("KorisniciUloge")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK_UserRole_User_UserID");

                    b.HasOne("Videoteka.WebAPI.Database.Uloge", "Uloga")
                        .WithMany("KorisniciUloge")
                        .HasForeignKey("UlogaId")
                        .HasConstraintName("FK_UserRole_Role_RoleID");
                });

            modelBuilder.Entity("Videoteka.WebAPI.Database.Ocjena", b =>
                {
                    b.HasOne("Videoteka.WebAPI.Database.RezervacijaFilma", "RezervacijaFilma")
                        .WithMany("Ocjena")
                        .HasForeignKey("RezervacijaFilmaId");
                });

            modelBuilder.Entity("Videoteka.WebAPI.Database.Poruka", b =>
                {
                    b.HasOne("Videoteka.WebAPI.Database.Klijent", "Klijent")
                        .WithMany("Poruka")
                        .HasForeignKey("KlijentId");

                    b.HasOne("Videoteka.WebAPI.Database.RezervacijaFilma", "RezervacijaFilma")
                        .WithMany("Poruka")
                        .HasForeignKey("RezervacijaFilmaId")
                        .HasConstraintName("FK_Poruka_RezervacijaFilmaID");

                    b.HasOne("Videoteka.WebAPI.Database.Korisnici", "Uposlenik")
                        .WithMany("Poruka")
                        .HasForeignKey("UposlenikId")
                        .HasConstraintName("FK_Poruka_UposlenikID");
                });

            modelBuilder.Entity("Videoteka.WebAPI.Database.RezervacijaFilma", b =>
                {
                    b.HasOne("Videoteka.WebAPI.Database.Film", "Film")
                        .WithMany("RezervacijaFilma")
                        .HasForeignKey("FilmId")
                        .HasConstraintName("FK_RezervacijaFilma_FilmID");

                    b.HasOne("Videoteka.WebAPI.Database.Klijent", "Klijent")
                        .WithMany("RezervacijaFilma")
                        .HasForeignKey("KlijentId")
                        .HasConstraintName("FK_RezervacijaFilma_KlijentID");

                    b.HasOne("Videoteka.WebAPI.Database.Racun", "Racun")
                        .WithMany("RezervacijaFilma")
                        .HasForeignKey("RacunId")
                        .HasConstraintName("FK_RezervacijaFilma_RacunID");
                });
#pragma warning restore 612, 618
        }
    }
}
