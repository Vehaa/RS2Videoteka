<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>